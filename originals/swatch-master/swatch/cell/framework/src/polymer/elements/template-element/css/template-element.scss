// for more info about styling an element:
// https://www.polymer-project.org/1.0/docs/devguide/styling.html

:host {
  // always declare a display property for your element, otherwise it will apear
  // to have height and width = 0 but yet it renders content...
  display: block;
}
// :host can take an extra css selector as parameter
// this will apply when your element is used like this:
// <template-element disabled></template-element>
// or with data-binding
// <template-element disabled$="{{isDisabled}}"></template-element>
:host([disabled]) {
  color: gray;
}

.some-class, [some-attribute], some-element {
  // use custom css properties like this
  // color can be defined by another developer, it defaults to blue
  color: var(--my-custom-color, blue);
}
// another developer can do this now:
// template-element {
//   --my-custom-color: green;
// }

.some-class, [some-attribute], some-element {
  // use custom css mixins like this
  // another developer can now inject extra css at this point
  @apply(--my-mixin-name);
}
// another developer can do this now:
// template-element {
//   --my-mixin-name: #{'{
//     background-color: green;
//     border-radius: 4px;
//     border: 1px solid gray;
//   }'};
// }
